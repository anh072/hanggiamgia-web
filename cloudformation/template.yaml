---
AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Description: CDN and SSR for the web

Parameters:
  Environment:
    Type: String
    Default: test
    AllowedValues:
    - test
    - dev
    - prod

  CNAME:
    Type: CommaDelimitedList
    Default: "giarevn.net, www.giarevn.net, *.giarevn.net"

  SSLCertificateArn:
    Type: String

  LambdaEdgeArn:
    Type: String

Resources:
  CDNLogBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'giare-${Environment}-cdn-logs'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases: !Ref CNAME
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificateArn
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          ForwardedValues: # deprecated
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: MyOrigin
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
          - EventType: origin-request
            LambdaFunctionARN: !Ref LambdaEdgeArn
        Enabled: true
        HttpVersion: http1.1
        Origins:
        - DomainName: aws.amazon.com
          Id: MyOrigin
          CustomOriginConfig:
            HTTPPort: 80
            OriginProtocolPolicy: https-only
        PriceClass: 'PriceClass_200'
        Logging:
          Bucket: !GetAtt 'CDNLogBucket.RegionalDomainName'
          Prefix: cdn

  FrontEndApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub 'giare-${Environment}-frontend-api-logs'
      RetentionInDays: 30

  FrontEndApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: !Sub 'giare-${Environment}-frontend-api'
      StageName: live
      AccessLogSettings:
        DestinationArn: !!GetAtt FrontEndApiLogGroup.Arn

  FrontEndFunction: 
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId:
              Ref: FrontEndApi
      FunctionName: !Sub 'giare-${Environment}-frontend-function'
      Runtime: nodejs12.x
      CodeUri: ../server-build
      Handler: index.handler
      Timeout: 5
